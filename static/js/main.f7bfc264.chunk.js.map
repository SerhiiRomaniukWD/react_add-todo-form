{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","cn","TodoList","todos","map","findUserById","users","userId","find","extendedTodos","usersFromServer","App","useState","setTodos","setUserId","setTitle","titleError","setTitleError","userError","setUserError","makeTodoId","Math","max","action","method","onSubmit","event","preventDefault","trimTitle","trim","newTodo","currentTodos","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7bfc264.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC } from 'react';\nimport { User } from '../../react-app-env';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { ExtendedTodo } from '../../react-app-env';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: ExtendedTodo;\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    user,\n    id,\n    title,\n    completed,\n  } = todo;\n\n  return (\n    <li\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </li>\n  );\n};\n","import { FC } from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { ExtendedTodo } from '../../react-app-env';\n\ntype Props = {\n  todos: ExtendedTodo[];\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => (\n  <ul className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </ul>\n);\n","import './App.scss';\n\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { ExtendedTodo, User } from './react-app-env';\nimport { TodoList } from './components/TodoList';\n\nconst findUserById = (users: User[], userId: number) => {\n  const foundUser = users.find(user => user.id === userId);\n\n  return foundUser || null;\n};\n\nconst extendedTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUserById(usersFromServer, todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<ExtendedTodo[]>(extendedTodos);\n\n  const [userId, setUserId] = useState(0);\n  const [title, setTitle] = useState('');\n\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const makeTodoId = Math.max(...todos.map(todo => todo.id)) + 1;\n\n  const setDefaultStates = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const trimTitle = title.trim();\n\n    setTitleError(!trimTitle);\n    setUserError(!userId);\n\n    if (!trimTitle || !userId) {\n      return;\n    }\n\n    const newTodo = {\n      id: makeTodoId,\n      title,\n      completed: false,\n      userId,\n      user: findUserById(usersFromServer, userId),\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n    setDefaultStates();\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleInput}\n            />\n            {titleError && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleSelect}\n            >\n              <option value={0} disabled>Choose a user</option>\n\n              {usersFromServer.map(user => {\n                const { id, name } = user;\n\n                return (\n                  <option value={id} key={id}>{name}</option>\n                );\n              })}\n            </select>\n\n            {userError && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n          </label>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}